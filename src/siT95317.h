// SPDX-License-Identifier: GPL-2.0
/*
 * Driver for SiTime Labs SiT95317/SiT95316
 * Copyright (C) 2024
 * Author: Ali Rouhi
 * 	   Serhiy Vlasenko
 *
 * The SiT95317 has 4 input & 8 output clocks.
 * The SiT95316 has 4 inputs & 16 output clocks.
 */


#include <linux/clk.h>
#include <linux/clk-provider.h>
#include <linux/delay.h>
#include <linux/err.h>
#include <linux/errno.h>
#include <linux/i2c.h>
#include <linux/kernel.h>
#include <linux/module.h>
#include <linux/of_platform.h>
#include <linux/rational.h>
#include <linux/cdev.h>
#include <linux/regmap.h>
#include <linux/slab.h>
#include <linux/string.h>
#include <linux/fs.h>
#include <stdbool.h>
#include <linux/uaccess.h>
#include <linux/ioctl.h>

#define SI95316_MAX_NUM_INPUTS         	8
#define SI95316_MAX_NUM_OUTPUTS     	12

#define SI95317_MAX_NUM_INPUTS         	4
#define SI95317_MAX_NUM_OUTPUTS     	8

#define SI95211_MAX_NUM_INPUTS         	4
#define SI95211_MAX_NUM_OUTPUTS     	12

/* IOCTL */
#define REG_WRITE     				_IOW('k', 1, struct ioctl_data)
#define REG_READ      				_IOR('k', 2, struct ioctl_data)
#define SEL_FREQ_PLAN 				_IOW('k', 3, unsigned int)
#define CLK_ENABLE     				_IOW('k', 4, unsigned int)
#define CLK_DISABLE    				_IOW('k', 5, unsigned int)
#define SET_FREQUENCY 				_IOW('k', 9, struct freq_config)
#define SET_INPUT_FREQ 				_IOW('k', 10, struct freq_config)
#define CONFIGURE_OUTPUT_CLOCK_LINK_TYPE 	_IOW('k', 11, struct output_clock_config)
#define CONFIGURE_INPUT_CLOCK_LINK_TYPE 	_IOW('k', 12, struct input_clock_config)



#define MAX_PLL_PHASE_DETECTOR_FREQ	12500000  // 12.5 MHz as maximum allowed frequency for PLL phase detector
#define MIN_DIVN1 					1
#define MAX_DIVN1 					65535

#define MAX_DIVIDER 				65535
#define MIN_DIVIDER 				1
#define SIT9531x_PAGE             	0x0001

#define FAST_LOCK_BW_RATIO 			100  // Fast lock bandwidth should be less than 1/100th of the input frequency
#define TARGET_OUTPUT_FREQ 			156250000  // Target output frequency of 156.25 MHz

//Input frequency Fin to PLL 10MHz
#define FIN_PLL_FREQ_MAX 			10000000

// Minimum VCO frequency (4.9152 GHz)
//datasheet suggests 4915.2 & 6875 MHz,But these values produce stable output
#define FVCO_LOWBAND_FREQ_MIN 		5000000000 
#define FVCO_HIGHBAND_FREQ_MIN 		6950000000  

#define REFERENCE_CLK_FREQUENCY 	38400000

/*Xtal Frequency Range in 25MHz to 192MHz*/
#define XTAL_FREQ_MIN 				25000000
#define XTAL_FREQ_MAX 				192000000

/*Doubler recommended Frequency range [35MHz,96MHz]*/
#define DOUBLER_XTAL_FREQ_MIN 		35000000 
#define DOUBLER_XTAL_FREQ_MAX 		96000000

/*Signle Ended Input Frequency Range in 0.5Hz to 250MHz*/
#define INPUT_SE_FREQ_MIN 			0.5
#define INPUT_SE_FREQ_MAX 			250000000 

/*Single Ended Out Frequency Range in 0.5Hz to 250MHz*/
#define OUTPUT_SE_FREQ_MIN 			0.5
#define OUTPUT_SE_FREQ_MAX 			250000000 

#define PLL_INPUT_FREQ_MIN 			0.5
#define PLL_INPUT_FREQ_MAX 			12500000

#define PLL_NORMAL_FAST_BW_MIN		0.00009
#define PLL_NORMAL_FAST_BW_MAX		4000

#define SIT95317_XO2_GENERIC_REG 	0x2D

#define SI95317_PAGE_NUM			0xFF
#define SI95317_DEBUG_REG			0xBD
#define SI95317_PRG_DIR_GEN_0		0x0F
#define SI95317_INPUT_ENABLE		0x40

#define SI95317_PROFILE_ID			0x0
#define SI95317_VARIANT_ID			0x31
#define SI95317_VERSION_ID			0xA3
#define SI95317_DEVICE_ID			0x5F
#define SI95317_UNLOCK_DEBUG_REG	0xC3
#define SI95317_LOOPLOCK			0x40
#define SI95317_PRGCMD_STATE		0x01
#define SI95317_ACTIVE_STATE		0x00
#define SI95317_UPDATE_NVM			0x10

#define OUTPUT_REG1					0x25
#define OUTPUT_REG2					0x24

#define DIVN_REG_ADDRESS			0x30
#define DIVN_REG_ADDRESS_NUM		0x32
#define DIVN_REG_ADDRESS_DEN		0x38

#define DIVN2_REG_ADDRESS			0x3E
#define DIVN2_REG_ADDRESS_NUM		0x43
#define DIVN2_REG_ADDRESS_DEN		0x49

#define READ_EERPROM_REG_ADRESS 0x05

#define to_drv_si9531x(_hw)      	container_of(_hw, struct drv_si9531x, hw)
#define to_clk_si9531x_data(_hw)	container_of(_hw, struct si9531x_clk, hw)

// Select Page number for serial communication...
enum SiT9531x{
	Page0_Mainsys 	= 0x00,
	Page1_Mainsys 	= 0x01,
	Page2_Inputsys 	= 0x02,
	Page3_Outsys 	= 0x03,
	Page4_Outsys 	= 0x04,
	Page6_Clkmon 	= 0x06,
	Page7_Clkmon 	= 0x07,
	PageA_PLLA 		= 0x0A,
	Page1A_PLLA 	= 0x1A,
	PageB_PLLB 		= 0x0B,
	Page1B_PLLB		= 0x1B,
	PageC_PLLC		= 0x0C,
	Page1C_PLLC		= 0x1C,
	PageD_PLLD		= 0x0D,
	Page1D_PLLD		= 0x1D
};


enum {
	FAILED  = -1,
	SUCCESS ,
};

enum {
	XTAL_OUT_OF_RANGE_ERROR = 0x100,
	INPUT_SE_OUT_OF_RANGE_ERROR,
	OUTPUT_SE_OUT_OF_RANGE_ERROR,
	INPUTCLKID_OUT_OF_RANGE_ERROR,
	OUTCLKID_OUT_OF_RANGE_ERROR,
	PLLNORMALBW_OUT_OF_RANGE_ERROR,
	PLLFASTBW_OUT_OF_RANGE_ERROR,
	NORMAL_BW_CONSTRAINT_ERROR,
	FAST_BW_CONSTRAINT_ERROR
};

enum
{
	SINGLE,
	DIFFERENTIAL
};

enum		//clock status : Disabled/Enabled
{
	OFF,
	ON
};

enum 
{
	SIT95316 = 0x5f,
	SIT95317 = 0x6d,
	SIT95211=0x69
};

enum {
	PPM_100 = 1,                
	PPM_200,
	PPM_300,
	PPM_400,
	PPM_500,                //5
	PPM_600,
	PPM_700,
	PPM_800,
	PPM_900,                //9
	PPM_1000,
	PPM_1100,
	PPM_1200,
	PPM_1300,               //13
	PPM_1400,
	PPM_1500,
	PPM_1600                //16
};

typedef enum {
	PLLA,
	PLLB,
	PLLC,
	PLLD
}pll;

typedef enum{
	AC = 0,
	DC,
	LVDS = 0,
	LVPECL,
	CML,
	HCSL
}modetype;

typedef enum{
	EXT_TERM = 0,
	INT_PULL_DN,
	INT_PULL_UP,
	CMOS_OUTP_NO_OUTN = 4,
	NO_OUTP_CMOS_OUTN = 8,
	CMOS_OUTP_CMOS_OUTN = 12
}differentialType;

typedef enum{
	P_TYPE,
	N_TYPE
}linktype;
// Structure to hold frequency range and corresponding register values
struct freq_range {
	unsigned int min_freq;     // Minimum frequency in Hz
	unsigned int max_freq;     // Maximum frequency in Hz
	unsigned int fast_frequency; // Fast frequency in Hz
	u8 reg_13_value;           // Register 0x13 value for fast frequency
	u8 reg_14_value;           // Register 0x14 value for fast frequency
	u8 reg_15_value;          // Register 0x15 value for fast frequency
	u8 normal_reg_10_value;           // Register 0x10 value for normal frequency
	u8 normal_reg_11_value;           // Register 0x11 value for normal frequency
	u8 normal_reg_12_value;           // Register 0x12 value for normal frequency
};

// Lookup table for frequency ranges and corresponding register values
static const struct freq_range freq_table[] = {
	{0.5,   100,   1e-3, 0x8e, 0x7d, 0x6c, 0x8e, 0x7d, 0xb0},
	{100,   500,   0.1,  0x89, 0x54, 0xa8, 0x89, 0x54, 0x8b},
	{500,   1000,  0.5,  0x89, 0x56, 0x88, 0x85, 0x2b, 0x87},
	{1000,  2000,  1,    0xc9, 0x4c, 0xc8, 0x24, 0x36, 0xc8},
	{2000,  5000,  2,    0xa9, 0x55, 0x87, 0x24, 0x36, 0xc8},
	{5000,  10000, 5,    0x89, 0x56, 0x87, 0x88, 0x4e, 0xea},
	{10000, 50000, 10,   0xaa, 0x5d, 0x68, 0xaa, 0x5d, 0xcc},
	{50000, 100000, 50,   0xc9, 0x56, 0x87, 0xab, 0x64, 0xcd},
	{100000, 500000, 100,  0xca, 0x54, 0xa8, 0xad, 0x77, 0xef},
	{500000, 1000000, 500, 0x89, 0x56, 0x87, 0xcf, 0x7b, 0x90},
	{1000000, 10000000, 1000, 0xcc, 0x2b, 0xa8, 0x92, 0x64, 0xd2},
	{10000000, 40000000, 4000, 0xab, 0x27, 0x88, 0xf4, 0x64, 0x94},
};

struct siT9531x_device {
	u8 chip_id;
	u8 num_inputs;
	u8 num_outputs;
	char *chip_name;
};

/* Static configuration (to be moved to firmware) */
struct siT9531x_reg_cfg {
	u8 address;
	u8 value;
};

struct divider_data {
	u64 int_part;
	u64 fracn;
	u64 fracd;
};

struct inclk_linkcfg {
	u8 linktype;
	u8 difflinktype;
	u8 mode;
};

struct outclk_linkcfg {
	u8 linktype;
	u8 difflinktype;
	u8 mode;
	unsigned int swing;
	u8 itresistor;
};

// For IOCTLs
struct output_clock_config {
	int clkid;
	unsigned int pllA;
	unsigned int pllB;
	unsigned int pllC;
	unsigned int pllD;
	unsigned int linktype;
	unsigned int difflinktype;
	unsigned int mode;
	unsigned int swing;
	unsigned int itresistor;
};

struct input_clock_config{
	int clkid;
	unsigned int pllA;
	unsigned int pllB;
	unsigned int pllC;
	unsigned int pllD;
	unsigned int linktype;
	unsigned int difflinktype;
	unsigned int mode;
};


static const char * const si9531x_input_names[] = {
	"clkin0", "clkin1", "clkin2", "clkin3", "xtal"
};

static const char * const si9531x_output_names[] = {
	"clkout0", "clkout1", "clkout2", "clkout3", "clkout4", "clkout5", "clkout6", "clkout7"
};

static const unsigned int clkout_regvalue[] = { 0x01, 0x08, 0x10, 0x20, 0x80, 0x01, 0x02, 0x08};

/* Register map for different output clocks */
static const unsigned int clkout_odr_divn_regvalue[] = { 0x14, 0x24, 0x34, 0x44, 0x54, 0x64};

/** @Description - Def from sitime
 * xtal freq = 38.4 MHz 
 * Inp  freq = #0P  200  MHz , 0N 100 MHz
 * 	       #1P  2    MHz , 1N 100 MHz
 * 	       #2P  50   MHz , 2N 100 MHz
 * 	       #3P  10   MHz , 3N 10  KHz
 * Out freq  = 3.3V @ 10MHz  OUT7
 *             3.3V @ 100MHz OUT6
 *             3.3V @ 25MHz  OUT5
 *             3.3V @ 50MHz  OUT4
 *             3.3V @ 200Hz  OUT3
 *             3.3V @ 1MHz   OUT2
 *             3.3V @ 240MHz OUT1
 *             3.3V @ 1Hz    OUT0
 * Used PLL = PLLA , PLLB, PLLC, PLLD
 */

static const struct siT9531x_reg_cfg vek385_def[] = {
	// Configure IO Supply Level
	{ 0xFF, 0x00 },
	{ 0xBD, 0xC3 },
	{ 0x3A, 0x00 },
	{ 0x0F, 0x10 },
	{ 0x57, 0x01 },

	// GENERIC : begin
	{ 0xFF, 0x00 },
	{ 0xBD, 0xC3 },
	{ 0xEC, 0x00 },
	{ 0x10, 0x04 },
	{ 0x11, 0x08 },
	{ 0x12, 0x09 },
	{ 0x13, 0x00 },
	{ 0x14, 0x06 },
	{ 0x15, 0x03 },
	{ 0x16, 0x05 },
	{ 0x17, 0x00 },
	{ 0x18, 0x10 },
	{ 0x1A, 0x0F },
	{ 0x1B, 0x0F },
	{ 0x1C, 0x0F },
	{ 0x1D, 0xCF },
	{ 0x1E, 0xFB },
	{ 0x1F, 0xCF },
	{ 0x20, 0xFB },
	{ 0x21, 0xBC },
	{ 0x22, 0x8F },
	{ 0x23, 0x43 },
	{ 0x24, 0x06 },
	{ 0x25, 0xF7 },
	{ 0x27, 0x00 },
	{ 0x28, 0x40 },
	{ 0x29, 0x0D },
	{ 0x2A, 0xFD },
	{ 0x2C, 0xA2 },
	{ 0x2D, 0x27 },
	{ 0x2F, 0x00 },
	{ 0x34, 0x6C },
	{ 0x35, 0xFF },
	{ 0x38, 0x80 },
	{ 0x3C, 0xA0 },
	{ 0x64, 0x08 },
	{ 0xFF, 0x01 },
	{ 0xBD, 0xC3 },
	{ 0x10, 0x00 },
	{ 0x11, 0x00 },
	{ 0x12, 0x00 },
	{ 0x13, 0xA8 },
	{ 0x14, 0x04 },
	{ 0x2E, 0x00 },
	{ 0x2F, 0x01 },
	{ 0x32, 0x00 },
	{ 0x33, 0x00 },
	{ 0x34, 0x00 },
	{ 0x35, 0x00 },
	{ 0x36, 0x00 },
	{ 0x37, 0x00 },
	{ 0x38, 0x00 },
	{ 0x3C, 0x00 },
	{ 0x42, 0x08 },
	{ 0xFF, 0x00 },
	{ 0x0F, 0x10 },

	{ 0xE1, 0x7F },
	{ 0xE0, 0x7F },

	{ 0x0F, 0x40 },

	{ 0xFF, 0x03 },
	{ 0xBD, 0xC3 },
	{ 0x14, 0x18 },
	{ 0x15, 0x60 },
	{ 0x19, 0x02 },
	{ 0x1A, 0x17 },
	{ 0x1C, 0x30 },
	{ 0x1E, 0xA0 },
	{ 0x1F, 0x04 },
	{ 0x24, 0x18 },
	{ 0x25, 0x60 },
	{ 0x29, 0x02 },
	{ 0x2A, 0x17 },
	{ 0x2C, 0x30 },
	{ 0x2E, 0xA0 },
	{ 0x2F, 0x04 },
	{ 0x34, 0x18 },
	{ 0x35, 0x60 },
	{ 0x39, 0x02 },
	{ 0x3A, 0x17 },
	{ 0x3C, 0x30 },
	{ 0x3E, 0xA0 },
	{ 0x3F, 0x04 },
	{ 0x54, 0xBE },
	{ 0x55, 0x40 },
	{ 0x59, 0x02 },
	{ 0x5A, 0x8F },
	{ 0x5C, 0x20 },
	{ 0x5E, 0x44 },
	{ 0x64, 0x1C },
	{ 0x65, 0x40 },
	{ 0x69, 0x02 },
	{ 0x6A, 0x8F },
	{ 0x6C, 0x20 },
	{ 0x6E, 0x44 },
	{ 0xFF, 0x04 },
	{ 0xBD, 0xC3 },
	{ 0x14, 0xBE },
	{ 0x15, 0x40 },
	{ 0x19, 0x02 },
	{ 0x1A, 0x8F },
	{ 0x1C, 0x20 },
	{ 0x1E, 0x44 },
	{ 0x24, 0xBE },
	{ 0x25, 0x40 },
	{ 0x29, 0x02 },
	{ 0x2A, 0x8F },
	{ 0x2C, 0x20 },
	{ 0x2E, 0x44 },
	{ 0x2F, 0x60 },
	{ 0x44, 0x10 },
	{ 0x45, 0x60 },
	{ 0x49, 0x02 },
	{ 0x4A, 0x17 },
	{ 0x4C, 0x30 },
	{ 0x4E, 0xA0 },
	{ 0x4F, 0x04 },
	{ 0x54, 0x21 },
	{ 0x55, 0x60 },
	{ 0x59, 0x02 },
	{ 0x5A, 0x17 },
	{ 0x5C, 0x30 },
	{ 0x5E, 0xA0 },
	{ 0x5F, 0x04 },
	{ 0xFF, 0x03 },
	{ 0x0F, 0x10 },

	{ 0x0F, 0x40 },
	{ 0xFF, 0x0A },
	{ 0xBD, 0xC3 },
	{ 0x16, 0x3F },
	{ 0x17, 0x02 },
	{ 0x18, 0x2F },
	{ 0x1B, 0x05 },
	{ 0x1C, 0x04 },
	{ 0x1D, 0x24 },
	{ 0x1E, 0x40 },
	{ 0x1F, 0x60 },
	{ 0x22, 0x32 },
	{ 0x23, 0x10 },
	{ 0x26, 0x02 },
	{ 0x27, 0x06 },
	{ 0x29, 0x10 },
	{ 0x2B, 0x66 },
	{ 0x2C, 0x01 },
	{ 0x2D, 0x18 },
	{ 0x2F, 0x07 },
	{ 0x30, 0x36 },
	{ 0x31, 0x60 },
	{ 0x32, 0x25 },
	{ 0x35, 0xB6 },
	{ 0x38, 0x7F },
	{ 0x39, 0xFF },
	{ 0x3A, 0xFF },
	{ 0x3B, 0xFF },
	{ 0x3C, 0xF8 },
	{ 0x3D, 0x15 },
	{ 0x42, 0xE8 },
	{ 0x49, 0x01 },
	{ 0x4D, 0xC0 },
	{ 0x4E, 0x20 },
	{ 0x57, 0x40 },
	{ 0x7F, 0x40 },
	{ 0xFF, 0x1A },
	{ 0xBD, 0xC3 },
	{ 0x2D, 0x02 },
	{ 0x50, 0x08 },
	{ 0x5C, 0x0F },
	{ 0x5D, 0xFF },
	{ 0x6C, 0xDD },
	{ 0xFF, 0x0A },
	{ 0x0F, 0x10 },

	{ 0x0F, 0x40 },
	{ 0xFF, 0x0B },
	{ 0xBD, 0xC3 },
	{ 0x16, 0x3F },
	{ 0x17, 0x02 },
	{ 0x18, 0x2F },
	{ 0x1B, 0x05 },
	{ 0x1C, 0x04 },
	{ 0x1D, 0x24 },
	{ 0x1E, 0x40 },
	{ 0x1F, 0x68 },
	{ 0x22, 0x32 },
	{ 0x23, 0x10 },
	{ 0x26, 0x02 },
	{ 0x28, 0x20 },
	{ 0x29, 0x10 },
	{ 0x2B, 0x66 },
	{ 0x2C, 0x01 },
	{ 0x2D, 0x18 },
	{ 0x2F, 0x07 },
	{ 0x30, 0x49 },
	{ 0x31, 0x60 },
	{ 0x32, 0xAB },
	{ 0x33, 0xAA },
	{ 0x34, 0xAA },
	{ 0x35, 0xEA },
	{ 0x38, 0xFB },
	{ 0x39, 0xFF },
	{ 0x3A, 0xFF },
	{ 0x3B, 0xFF },
	{ 0x3C, 0xF8 },
	{ 0x3D, 0x15 },
	{ 0x42, 0x08 },
	{ 0x49, 0x01 },
	{ 0x4D, 0xC0 },
	{ 0x4E, 0x20 },
	{ 0x57, 0x40 },
	{ 0x7F, 0x40 },
	{ 0xFF, 0x1B },
	{ 0xBD, 0xC3 },
	{ 0x2D, 0x02 },
	{ 0x50, 0x08 },
	{ 0x5C, 0x0F },
	{ 0x5D, 0xFF },
	{ 0x6C, 0xDD },
	{ 0xFF, 0x0B },
	{ 0x0F, 0x10 },

	{ 0x0F, 0x40 },
	{ 0xFF, 0x0C },
	{ 0xBD, 0xC3 },
	{ 0x16, 0x3F },
	{ 0x17, 0x02 },
	{ 0x18, 0x2F },
	{ 0x1B, 0x05 },
	{ 0x1C, 0x04 },
	{ 0x1D, 0x24 },
	{ 0x1E, 0x40 },
	{ 0x1F, 0x68 },
	{ 0x22, 0x32 },
	{ 0x23, 0x10 },
	{ 0x26, 0x02 },
	{ 0x28, 0xB0 },
	{ 0x29, 0x10 },
	{ 0x2B, 0x66 },
	{ 0x2C, 0x01 },
	{ 0x2D, 0x18 },
	{ 0x2F, 0x07 },
	{ 0x30, 0x33 },
	{ 0x31, 0x60 },
	{ 0x32, 0x4E },
	{ 0x33, 0x55 },
	{ 0x34, 0x55 },
	{ 0x35, 0x75 },
	{ 0x38, 0xEF },
	{ 0x39, 0xFF },
	{ 0x3A, 0xFF },
	{ 0x3B, 0xFF },
	{ 0x3C, 0xF8 },
	{ 0x3D, 0x15 },
	{ 0x42, 0x08 },
	{ 0x49, 0x01 },
	{ 0x4D, 0xC0 },
	{ 0x4E, 0x20 },
	{ 0x57, 0x40 },
	{ 0x7F, 0x40 },
	{ 0xFF, 0x1C },
	{ 0xBD, 0xC3 },
	{ 0x2D, 0x02 },
	{ 0x50, 0x08 },
	{ 0x5C, 0x0F },
	{ 0x5D, 0xFF },
	{ 0x6C, 0xDD },
	{ 0xFF, 0x0C },
	{ 0x0F, 0x10 },

	{ 0x0F, 0x40 },
	{ 0xFF, 0x0D },
	{ 0xBD, 0xC3 },
	{ 0x16, 0x3F },
	{ 0x17, 0x02 },
	{ 0x18, 0x2F },
	{ 0x1B, 0x05 },
	{ 0x1C, 0x04 },
	{ 0x1D, 0x24 },
	{ 0x1E, 0x40 },
	{ 0x1F, 0x60 },
	{ 0x22, 0x32 },
	{ 0x23, 0x10 },
	{ 0x26, 0x02 },
	{ 0x27, 0x0E },
	{ 0x29, 0x10 },
	{ 0x2B, 0x66 },
	{ 0x2C, 0x01 },
	{ 0x2D, 0x18 },
	{ 0x2F, 0x07 },
	{ 0x30, 0x50 },
	{ 0x31, 0x70 },
	{ 0x38, 0xFE },
	{ 0x39, 0xFF },
	{ 0x3A, 0xFF },
	{ 0x3B, 0xFF },
	{ 0x3C, 0xF8 },
	{ 0x3D, 0x15 },
	{ 0x42, 0xA8 },
	{ 0x49, 0x01 },
	{ 0x4D, 0xC0 },
	{ 0x4E, 0x20 },
	{ 0x57, 0x40 },
	{ 0x7F, 0x40 },
	{ 0xFF, 0x1D },
	{ 0xBD, 0xC3 },
	{ 0x2D, 0x02 },
	{ 0x50, 0x08 },
	{ 0x5C, 0x0F },
	{ 0x5D, 0xFF },
	{ 0x6C, 0xDD },
	{ 0xFF, 0x0D },
	{ 0x0F, 0x10 },

	{ 0x0F, 0x40 },

};

static const struct siT9531x_reg_cfg siT95317_def[] = {
	// Configure IO Supply Level
	{ 0xff, 0x00 },
	{ 0xbd, 0xc3 },
	{ 0x3a, 0x00 },
	{ 0x0f, 0x10 },
	{ 0x57, 0x01 },

	// GENERIC : begin
	{ 0xff, 0x00 },
	{ 0xbd, 0xc3 },
	{ 0xec, 0x00 },
	{ 0x10, 0x04 },
	{ 0x11, 0x65 },
	{ 0x12, 0x64 },
	{ 0x13, 0x63 },
	{ 0x14, 0x06 },
	{ 0x15, 0x03 },
	{ 0x16, 0xa1 },
	{ 0x17, 0x05 },
	{ 0x18, 0x37 },
	{ 0x1a, 0x0f },
	{ 0x1b, 0x0f },
	{ 0x1c, 0x0f },
	{ 0x1d, 0xcf },
	{ 0x1e, 0xfb },
	{ 0x1f, 0xcf },
	{ 0x20, 0xfb },
	{ 0x21, 0xbc },
	{ 0x22, 0xcf },
	{ 0x23, 0x43 },
	{ 0x24, 0x0b },		//Disable Outputs   //0b
	{ 0x25, 0xb9 },		//Disable Outputs   //b9
	{ 0x27, 0x27 },
	{ 0x28, 0x40 },
	{ 0x29, 0x0d },
	{ 0x2a, 0xfd },
	{ 0x2f, 0x00 },
	{ 0x32, 0x0f },		//Disable CLK_IN 0,1,2,3 _N Clock Input   //0f
	{ 0x33, 0x40 },
	{ 0x34, 0x6c },
	{ 0x35, 0xff },		
	{ 0x3c, 0xa0 },
	{ 0x40, 0x0f },		//Disable CLK_IN 0,1,2,3 Clock Input	  //0f

	{ 0xff, 0x01 },
	{ 0xbd, 0xc3 },
	{ 0x10, 0x01 },
	{ 0x11, 0x02 },
	{ 0x12, 0x00 },
	{ 0x13, 0x62 },
	{ 0x14, 0x04 },
	{ 0x16, 0x70 },
	{ 0x1c, 0x81 },
	{ 0x1d, 0x11 },
	{ 0x1e, 0x11 },
	{ 0x1f, 0x11 },
	{ 0x20, 0x11 },
	{ 0x21, 0x11 },
	{ 0x22, 0x92 },
	{ 0x23, 0x22 },
	{ 0x24, 0x22 },
	{ 0x25, 0x22 },
	{ 0x26, 0x22 },
	{ 0x27, 0x22 },
	{ 0x28, 0xa3 },
	{ 0x29, 0x33 },
	{ 0x2a, 0x33 },
	{ 0x2b, 0x33 },
	{ 0x2c, 0x33 },
	{ 0x2d, 0x33 },
	{ 0x2e, 0x00 },
	{ 0x2f, 0x00 },
	{ 0x32, 0x00 },
	{ 0x33, 0x00 },
	{ 0x34, 0x00 },
	{ 0x35, 0x00 },
	{ 0x36, 0x00 },
	{ 0x37, 0x00 },
	{ 0x38, 0x00 },
	{ 0x3c, 0x00 },
	{ 0x42, 0x08 },

	// Update NVM Bank
	{ 0xff, 0x00 },
	{ 0x0f, 0x10 },
	{ 0xe1, 0x7f },
	{ 0xe0, 0x7f },
	// Proceed to Loop Lock
	{ 0x0f, 0x40 },
	// GENERIC : end

	// INPUT_SYS : begin
	{ 0xff, 0x02 },
	{ 0xbd, 0xc3 },
	{ 0x10, 0x14 },
	{ 0x16, 0xff },
	{ 0x17, 0xff },
	{ 0x18, 0xff },
	{ 0x19, 0xff },
	{ 0x1a, 0x28 },
	{ 0x1b, 0x23 },
	{ 0x1d, 0x0a },
	{ 0x20, 0x01 },
	{ 0x26, 0xff },
	{ 0x27, 0xff },
	{ 0x28, 0xff },
	{ 0x29, 0xff },
	{ 0x2a, 0x38 },
	{ 0x2b, 0x23 },
	{ 0x2d, 0x32 },
	{ 0x30, 0x05 },
	{ 0x36, 0xff },
	{ 0x37, 0xff },
	{ 0x38, 0xff },
	{ 0x39, 0xff },
	{ 0x3a, 0x28 },
	{ 0x3b, 0x23 },
	{ 0x3d, 0x0a },
	{ 0x3f, 0x0a },
	{ 0x40, 0xe8 },
	{ 0x41, 0x03 },
	{ 0x46, 0xff },
	{ 0x47, 0xff },
	{ 0x48, 0xff },
	{ 0x49, 0xff },
	{ 0x4a, 0x28 },
	{ 0x4b, 0x23 },
	{ 0x4c, 0x10 },
	{ 0x4d, 0x01 },
	{ 0x4f, 0x00 },

	// Update NVM Bank
	{ 0x0f, 0x10 },
	// Proceed to Loop Lock
	{ 0x0f, 0x40 },
	// INPUT_SYS : end

	// CLOCK_MON : begin
	{ 0xff, 0x06 },
	{ 0xbd, 0xc3 },
	{ 0x10, 0x43 },
	{ 0x11, 0x05 },
	{ 0x12, 0x04 },
	{ 0x14, 0x64 },
	{ 0x17, 0xc5 },
	{ 0x1a, 0x2a },
	{ 0x1b, 0x08 },
	{ 0x1d, 0x29 },
	{ 0x1f, 0x21 },
	{ 0x20, 0x43 },
	{ 0x21, 0x05 },
	{ 0x22, 0x04 },
	{ 0x24, 0x7d },
	{ 0x27, 0xc7 },
	{ 0x2a, 0x2e },
	{ 0x2b, 0x06 },
	{ 0x2d, 0x79 },
	{ 0x2f, 0x51 },
	{ 0x30, 0x43 },
	{ 0x31, 0x05 },
	{ 0x32, 0x04 },
	{ 0x34, 0x64 },
	{ 0x37, 0xc5 },
	{ 0x3a, 0x2a },
	{ 0x3b, 0x08 },
	{ 0x3d, 0x19 },
	{ 0x3f, 0x11 },
	{ 0x40, 0x43 },
	{ 0x41, 0x05 },
	{ 0x42, 0x04 },
	{ 0x44, 0x61 },
	{ 0x45, 0xa8 },
	{ 0x47, 0xcf },
	{ 0x49, 0x20 },
	{ 0x4a, 0x2e },
	{ 0x4b, 0x08 },
	{ 0x4d, 0x5f },
	{ 0x4f, 0x3f },
	{ 0x70, 0x09 },
	{ 0x7c, 0x60 },
	{ 0x88, 0x11 },
	{ 0x89, 0x11 },
	{ 0x8b, 0x01 },
	{ 0x8c, 0x11 },
	{ 0x8f, 0x81 },
	{ 0xa0, 0x43 },
	{ 0xa1, 0x05 },
	{ 0xa2, 0x04 },
	{ 0xa4, 0x64 },
	{ 0xa7, 0xe5 },
	{ 0xaa, 0x2a },
	{ 0xab, 0x08 },
	{ 0xad, 0x19 },
	{ 0xaf, 0x11 },
	{ 0xb0, 0x43 },
	{ 0xb1, 0x05 },
	{ 0xc0, 0x43 },
	{ 0xc1, 0x05 },
	{ 0xc2, 0x04 },
	{ 0xc4, 0x7d },
	{ 0xc7, 0xe7 },
	{ 0xca, 0x2e },
	{ 0xcb, 0x06 },
	{ 0xcd, 0x79 },
	{ 0xcf, 0x51 },
	{ 0xd2, 0x04 },
	{ 0xd4, 0x64 },
	{ 0xd7, 0xe5 },
	{ 0xda, 0x2a },
	{ 0xdb, 0x08 },
	{ 0xdd, 0x19 },
	{ 0xdf, 0x11 },
	{ 0xe0, 0x43 },
	{ 0xe1, 0x05 },
	{ 0xe2, 0x04 },
	{ 0xe4, 0x61 },
	{ 0xe5, 0xa8 },
	{ 0xe7, 0xef },
	{ 0xe9, 0x20 },
	{ 0xea, 0x2e },
	{ 0xeb, 0x08 },
	{ 0xed, 0x5f },
	{ 0xef, 0x3f },

	{ 0xff, 0x07 },
	{ 0xbd, 0xc3 },
	{ 0x27, 0x33 },
	{ 0x28, 0x07 },
	{ 0x29, 0x1a },
	{ 0x2a, 0x0a },
	{ 0x2b, 0xaa },
	{ 0x2c, 0xaa },
	{ 0x2d, 0xaa },
	{ 0x2e, 0x18 },

	// Update NVM Bank
	{ 0xff, 0x06 },
	{ 0x0f, 0x10 },
	// Proceed to Loop Lock
	{ 0x0f, 0x40 },
	// CLOCK_MON : end

	// OUTSYS : begin
	{ 0xff, 0x03 },
	{ 0xbd, 0xc3 },
	{ 0x10, 0x01 },
	{ 0x11, 0x9e },
	{ 0x12, 0xd9 },
	{ 0x13, 0x2c },
	{ 0x15, 0x40 },
	{ 0x19, 0x02 },
	{ 0x1a, 0x97 },
	{ 0x1c, 0x30 },
	{ 0x1e, 0x64 },
	{ 0x2f, 0x03 },
	{ 0x44, 0x1d },
	{ 0x45, 0x40 },
	{ 0x49, 0x02 },
	{ 0x4a, 0x97 },
	{ 0x4c, 0x30 },
	{ 0x4e, 0x64 },
	{ 0x53, 0x13 },
	{ 0x54, 0x38 },
	{ 0x55, 0x40 },
	{ 0x59, 0x02 },
	{ 0x5a, 0x97 },
	{ 0x5c, 0x30 },
	{ 0x5e, 0x64 },
	{ 0x61, 0x01 },
	{ 0x62, 0x77 },
	{ 0x63, 0x5d },
	{ 0x64, 0xc0 },
	{ 0x65, 0x40 },
	{ 0x69, 0x02 },
	{ 0x6a, 0x97 },
	{ 0x6c, 0x30 },
	{ 0x6e, 0x64 },

	{ 0xff, 0x04 },
	{ 0xbd, 0xc3 },
	{ 0x24, 0x8d },
	{ 0x25, 0x40 },
	{ 0x29, 0x02 },
	{ 0x2a, 0x97 },
	{ 0x2c, 0x30 },
	{ 0x2e, 0x64 },
	{ 0x2f, 0x60 },
	{ 0x33, 0x01 },
	{ 0x34, 0x1a },
	{ 0x35, 0x40 },
	{ 0x39, 0x02 },
	{ 0x3a, 0x97 },
	{ 0x3c, 0x30 },
	{ 0x3e, 0x64 },
	{ 0x44, 0x32 },
	{ 0x45, 0x40 },
	{ 0x49, 0x02 },
	{ 0x4a, 0x97 },
	{ 0x4c, 0x30 },
	{ 0x4e, 0x64 },
	{ 0x63, 0x01 },
	{ 0x64, 0xf4 },
	{ 0x65, 0x40 },
	{ 0x69, 0x02 },
	{ 0x6a, 0x97 },
	{ 0x6c, 0x30 },
	{ 0x6e, 0x64 },

	// Update NVM Bank
	{ 0xff, 0x03 },
	{ 0x0f, 0x10 },
	// Proceed to Loop Lock
	{ 0x0f, 0x40 },
	// OUTSYS : end

	// PLLA : begin
	{ 0xff, 0x0a },
	{ 0xbd, 0xc3 },
	{ 0x10, 0xb4 },
	{ 0x11, 0x64 },
	{ 0x12, 0x94 },
	{ 0x13, 0x8b },
	{ 0x14, 0x27 },
	{ 0x15, 0x88 },
	{ 0x16, 0x7f },
	{ 0x17, 0x02 },
	{ 0x18, 0x0f },
	{ 0x19, 0x58 },
	{ 0x1b, 0x05 },
	{ 0x1c, 0x04 },
	{ 0x1d, 0x24 },
	{ 0x1f, 0xa8 },
	{ 0x22, 0x32 },
	{ 0x23, 0x10 },
	{ 0x25, 0x86 },
	{ 0x26, 0x40 },
	{ 0x27, 0x0a },
	{ 0x29, 0x0d },
	{ 0x2a, 0x32 },
	{ 0x2b, 0x62 },
	{ 0x2c, 0x13 },
	{ 0x2d, 0x18 },
	{ 0x2e, 0x3e },
	{ 0x2f, 0x07 },
	{ 0x30, 0x41 },
	{ 0x31, 0x40 },
	{ 0x32, 0xa9 },
	{ 0x33, 0xaa },
	{ 0x34, 0xaa },
	{ 0x35, 0x1a },
	{ 0x38, 0xef },
	{ 0x39, 0xff },
	{ 0x3a, 0xff },
	{ 0x3b, 0xff },
	{ 0x3c, 0xf8 },
	{ 0x3d, 0x15 },
	{ 0x3e, 0xf4 },
	{ 0x3f, 0x01 },
	{ 0x42, 0x08 },
	{ 0x49, 0xff },
	{ 0x4a, 0xff },
	{ 0x4b, 0xff },
	{ 0x4c, 0xff },
	{ 0x4d, 0xc0 },
	{ 0x4e, 0x20 },
	{ 0x4f, 0xdf },
	{ 0x57, 0x40 },
	{ 0x7f, 0x40 },

	{ 0xff, 0x1a },
	{ 0xbd, 0xc3 },
	{ 0x2d, 0x02 },
	{ 0x50, 0x08 },
	{ 0x5c, 0x0f },
	{ 0x5d, 0xff },
	{ 0x6c, 0xdd },

	// Update NVM Bank
	{ 0xff, 0x0a },
	{ 0x0f, 0x10 },
	// Proceed to Loop Lock
	{ 0x0f, 0x40 },
	// PLLA : end

	// PLLB : begin
	{ 0xff, 0x0b },
	{ 0xbd, 0xc3 },
	{ 0x10, 0x92 },
	{ 0x11, 0x64 },
	{ 0x12, 0xd2 },
	{ 0x13, 0xca },
	{ 0x14, 0x27 },
	{ 0x15, 0xa6 },
	{ 0x16, 0xff },
	{ 0x17, 0x02 },
	{ 0x18, 0x0f },
	{ 0x19, 0x58 },
	{ 0x1b, 0x05 },
	{ 0x1c, 0x04 },
	{ 0x1d, 0x24 },
	{ 0x1f, 0xa8 },
	{ 0x22, 0x32 },
	{ 0x23, 0x10 },
	{ 0x25, 0x68 },
	{ 0x26, 0x40 },
	{ 0x27, 0x01 },
	{ 0x28, 0x80 },
	{ 0x29, 0x1d },
	{ 0x2a, 0x32 },
	{ 0x2b, 0x66 },
	{ 0x2c, 0x11 },
	{ 0x2d, 0x18 },
	{ 0x2e, 0x5c },
	{ 0x2f, 0x07 },
	{ 0x30, 0x5c },
	{ 0x31, 0x40 },
	{ 0x32, 0x0d },
	{ 0x35, 0xcc },
	{ 0x38, 0xbf },
	{ 0x39, 0xff },
	{ 0x3a, 0xff },
	{ 0x3b, 0xff },
	{ 0x3c, 0xf8 },
	{ 0x3d, 0x15 },
	{ 0x3e, 0xc5 },
	{ 0x3f, 0x0d },
	{ 0x42, 0x08 },
	{ 0x49, 0xff },
	{ 0x4a, 0xff },
	{ 0x4b, 0xff },
	{ 0x4c, 0xff },
	{ 0x4d, 0xc0 },
	{ 0x4e, 0x20 },
	{ 0x4f, 0xc4 },
	{ 0x57, 0x40 },
	{ 0x7f, 0x40 },

	{ 0xff, 0x1b },
	{ 0xbd, 0xc3 },
	{ 0x2d, 0x02 },
	{ 0x50, 0x08 },
	{ 0x5c, 0x0f },
	{ 0x5d, 0xff },
	{ 0x6c, 0xdd },

	// Update NVM Bank
	{ 0xff, 0x0b },
	{ 0x0f, 0x10 },
	// Proceed to Loop Lock
	{ 0x0f, 0x40 },
	// PLLB : end

	// PLLC : begin
	{ 0xff, 0x0c },
	{ 0xbd, 0xc3 },
	{ 0x10, 0xb4 },
	{ 0x11, 0x64 },
	{ 0x12, 0x94 },
	{ 0x13, 0x8b },
	{ 0x14, 0x27 },
	{ 0x15, 0x88 },
	{ 0x16, 0x7f },
	{ 0x17, 0x02 },
	{ 0x18, 0x0f },
	{ 0x19, 0x58 },
	{ 0x1b, 0x05 },
	{ 0x1c, 0x04 },
	{ 0x1d, 0x24 },
	{ 0x1f, 0xa8 },
	{ 0x22, 0x32 },
	{ 0x23, 0x10 },
	{ 0x25, 0x86 },
	{ 0x26, 0x40 },
	{ 0x28, 0xc0 },
	{ 0x29, 0x1d },
	{ 0x2a, 0x32 },
	{ 0x2b, 0x66 },
	{ 0x2c, 0x11 },
	{ 0x2d, 0x18 },
	{ 0x2e, 0x3e },
	{ 0x2f, 0x07 },
	{ 0x30, 0x40 },
	{ 0x31, 0x40 },
	{ 0x32, 0xff },
	{ 0x33, 0xff },
	{ 0x34, 0xff },
	{ 0x35, 0x0f },
	{ 0x38, 0xef },
	{ 0x39, 0xff },
	{ 0x3a, 0xff },
	{ 0x3b, 0xff },
	{ 0x3c, 0xf8 },
	{ 0x3d, 0x15 },
	{ 0x3e, 0xec },
	{ 0x3f, 0x01 },
	{ 0x42, 0x08 },
	{ 0x49, 0xff },
	{ 0x4a, 0xff },
	{ 0x4b, 0xff },
	{ 0x4c, 0xff },
	{ 0x4d, 0xc0 },
	{ 0x4e, 0x20 },
	{ 0x4f, 0xdf },
	{ 0x57, 0x40 },
	{ 0x7f, 0x40 },

	{ 0xff, 0x1c },
	{ 0xbd, 0xc3 },
	{ 0x2d, 0x02 },
	{ 0x50, 0x08 },
	{ 0x5c, 0x0f },
	{ 0x5d, 0xff },
	{ 0x6c, 0xdd },

	// Update NVM Bank
	{ 0xff, 0x0c },
	{ 0x0f, 0x10 },
	// Proceed to Loop Lock
	{ 0x0f, 0x40 },
	// PLLC : end

	// PLLD : begin
	{ 0xff, 0x0d },
	{ 0xbd, 0xc3 },
	{ 0x10, 0x88 },
	{ 0x11, 0x4c },
	{ 0x12, 0x8a },
	{ 0x13, 0x8b },
	{ 0x14, 0x6f },
	{ 0x15, 0x8a },
	{ 0x16, 0x31 },
	{ 0x17, 0x08 },
	{ 0x18, 0x0f },
	{ 0x19, 0x4c },
	{ 0x1b, 0x05 },
	{ 0x1c, 0x04 },
	{ 0x1d, 0x24 },
	{ 0x1f, 0xb8 },
	{ 0x22, 0x32 },
	{ 0x23, 0x10 },
	{ 0x24, 0x70 },
	{ 0x25, 0x90 },
	{ 0x26, 0xe0 },
	{ 0x27, 0x09 },
	{ 0x29, 0x0d },
	{ 0x2a, 0x32 },
	{ 0x2b, 0x66 },
	{ 0x2c, 0x11 },
	{ 0x2d, 0x18 },
	{ 0x2e, 0xcc },
	{ 0x2f, 0x07 },
	{ 0x30, 0x5b },
	{ 0x31, 0x40 },
	{ 0x32, 0x03 },
	{ 0x35, 0xa0 },
	{ 0x38, 0xf7 },
	{ 0x39, 0xff },
	{ 0x3a, 0xff },
	{ 0x3b, 0xff },
	{ 0x3c, 0xf8 },
	{ 0x3d, 0x14 },
	{ 0x3e, 0xc0 },
	{ 0x3f, 0x9e },
	{ 0x40, 0x0a },
	{ 0x42, 0x08 },
	{ 0x49, 0xff },
	{ 0x4a, 0xff },
	{ 0x4b, 0xff },
	{ 0x4c, 0xff },
	{ 0x4d, 0xc0 },
	{ 0x4e, 0x08 },
	{ 0x4f, 0x97 },
	{ 0x57, 0x40 },
	{ 0x7f, 0x40 },

	{ 0xff, 0x1d },
	{ 0xbd, 0xc3 },
	{ 0x2d, 0x02 },
	{ 0x50, 0x08 },
	{ 0x5c, 0x0f },
	{ 0x5d, 0xff },
	{ 0x6c, 0xdd },

	// Update NVM Bank
	{ 0xff, 0x0d },
	{ 0x0f, 0x10 },
	// Proceed to Loop Lock
	{ 0x0f, 0x40 },
	// PLLD : end
};

/** @Description - Def1 from sitime
 * xtal freq = 38.4 MHz 
 * Inp  freq = #0P  10 MHz , #1P  20 MHz
 * Out freq  = 3.3V @ 50MHz OUT7
 *             3.3V @ 5 MHz OUT6
 * Used PLL = PLLA
 */

static const struct siT9531x_reg_cfg siT95317_def1[] = {
	// Configure IO Supply Level
	{  0xff, 0x00 },
	{  0xbd, 0xc3 },
	{  0x3a, 0x00 },
	{  0x0f, 0x10 },
	{  0x57, 0x01 },


	// GENERIC : begin
	{  0xff, 0x00 },
	{  0xbd, 0xc3 },
	{  0xec, 0x1c },
	{  0x10, 0x04 },
	{  0x11, 0x65 },
	{  0x12, 0x64 },
	{  0x13, 0x63 },
	{  0x14, 0x06 },
	{  0x15, 0x03 },
	{  0x16, 0xa1 },
	{  0x17, 0x05 },
	{  0x18, 0x37 },
	{  0x1a, 0x0f },
	{  0x1b, 0x0f },
	{  0x1c, 0x0f },
	{  0x1d, 0xcf },
	{  0x1e, 0xfb },
	{  0x1f, 0xcf },
	{  0x20, 0xfb },
	{  0x21, 0xbc },
	{  0x22, 0xcf },
	{  0x23, 0x43 },
	{  0x24, 0x0a },
	{  0x27, 0x27 },
	{  0x28, 0x40 },
	{  0x29, 0x0d },
	{  0x2a, 0xfd },
	{  0x2f, 0x00 },
	{  0x33, 0x40 },
	{  0x34, 0x6c },
	{  0x35, 0xff },
	{  0x3c, 0xa0 },
	{  0x3f, 0x0e },
	{  0x40, 0x03 },


	{  0xff, 0x01 },
	{  0xbd, 0xc3 },
	{  0x10, 0x01 },
	{  0x11, 0x02 },
	{  0x12, 0x00 },
	{  0x13, 0x62 },
	{  0x14, 0x04 },
	{  0x16, 0x01 },
	{  0x17, 0x11 },
	{  0x18, 0x11 },
	{  0x19, 0x11 },
	{  0x1a, 0x11 },
	{  0x1b, 0x11 },
	{  0x2e, 0x00 },
	{  0x2f, 0x00 },
	{  0x32, 0x00 },
	{  0x33, 0x00 },
	{  0x34, 0x00 },
	{  0x35, 0x00 },
	{  0x36, 0x00 },
	{  0x37, 0x00 },
	{  0x38, 0x00 },
	{  0x3c, 0x00 },
	{  0x42, 0x08 },

	// Update NVM Bank
	{  0xff, 0x00 },
	{  0x0f, 0x10 },

	// force wakeup the slaves
	{  0xe1, 0x0f },
	{  0xe0, 0x0f },

	// Proceed to Loop Lock
	{  0x0f, 0x40 },
	// GENERIC : end


	// INPUT_SYS : begin
	{  0xff, 0x02 },
	{  0xbd, 0xc3 },
	{  0x10, 0x01 },
	{  0x16, 0xff },
	{  0x17, 0xff },
	{  0x18, 0xff },
	{  0x19, 0xff },
	{  0x1a, 0x38 },
	{  0x1b, 0x21 },
	{  0x20, 0x02 },
	{  0x26, 0xff },
	{  0x27, 0xff },
	{  0x28, 0xff },
	{  0x29, 0xff },
	{  0x2a, 0x28 },
	{  0x2b, 0x21 },
	{  0x3f, 0x0a },
	{  0x4f, 0x01 },

	// Update NVM Bank
	{  0x0f, 0x10 },

	// Proceed to Loop Lock
	{  0x0f, 0x40 },

	// INPUT_SYS : end


	// CLOCK_MON : begin
	{  0xff, 0x06 },
	{  0xbd, 0xc3 },
	{  0x10, 0x43 },
	{  0x11, 0x05 },
	{  0x12, 0x04 },
	{  0x14, 0x64 },
	{  0x17, 0xc5 },
	{  0x1a, 0x2a },
	{  0x1b, 0x08 },
	{  0x1d, 0x19 },
	{  0x1f, 0x11 },
	{  0x20, 0x43 },
	{  0x21, 0x05 },
	{  0x22, 0x04 },
	{  0x24, 0x64 },
	{  0x27, 0x05 },
	{  0x2a, 0x2a },
	{  0x2b, 0x08 },
	{  0x2d, 0x19 },
	{  0x2f, 0x11 },
	{  0x37, 0xc0 },
	{  0x47, 0xc0 },
	{  0x70, 0x01 },
	{  0x7c, 0x60 },
	{  0x8b, 0x11 },
	{  0x8f, 0x81 },
	{  0xa7, 0xc0 },
	{  0xc7, 0xc0 },
	{  0xd7, 0xc0 },
	{  0xe7, 0xc0 },


	{  0xff, 0x07 },
	{  0xbd, 0xc3 },
	{  0x27, 0x33 },
	{  0x28, 0x07 },
	{  0x29, 0x1a },
	{  0x2a, 0x0a },
	{  0x2b, 0xaa },
	{  0x2c, 0xaa },
	{  0x2d, 0xaa },
	{  0x2e, 0x18 },

	// Update NVM Bank
	{  0xff, 0x06 },
	{  0x0f, 0x10 },

	// Proceed to Loop Lock
	{  0x0f, 0x40 },
	// CLOCK_MON : end


	// OUTSYS : begin
	{  0xff, 0x03 },
	{  0xbd, 0xc3 },
	{  0x2f, 0x03 },


	{  0xff, 0x04 },
	{  0xbd, 0xc3 },
	{  0x2f, 0x63 },
	{  0x43, 0x03 },
	{  0x44, 0xde },
	{  0x45, 0x40 },
	{  0x49, 0x02 },
	{  0x4a, 0x97 },
	{  0x4c, 0x30 },
	{  0x4e, 0x64 },
	{  0x64, 0x63 },
	{  0x65, 0x40 },
	{  0x69, 0x02 },
	{  0x6a, 0x97 },
	{  0x6c, 0x30 },
	{  0x6e, 0x64 },

	// Update NVM Bank
	{  0xff, 0x03 },
	{  0x0f, 0x10 },

	// Proceed to Loop Lock
	{  0x0f, 0x40 },
	// OUTSYS : end


	// PLLA : begin
	{  0xff, 0x0a },
	{  0xbd, 0xc3 },
	{  0x10, 0xb4 },
	{  0x11, 0x64 },
	{  0x12, 0x94 },
	{  0x13, 0x8b },
	{  0x14, 0x27 },
	{  0x15, 0x88 },
	{  0x16, 0x7f },
	{  0x17, 0x02 },
	{  0x18, 0x0f },
	{  0x19, 0x58 },
	{  0x1b, 0x05 },
	{  0x1c, 0x04 },
	{  0x1d, 0x24 },
	{  0x1f, 0xa8 },
	{  0x22, 0x32 },
	{  0x23, 0x10 },
	{  0x25, 0x86 },
	{  0x26, 0x40 },
	{  0x27, 0x0a },
	{  0x29, 0x1d },
	{  0x2a, 0x32 },
	{  0x2b, 0x66 },
	{  0x2c, 0x11 },
	{  0x2d, 0x18 },
	{  0x2e, 0x3e },
	{  0x2f, 0x07 },
	{  0x30, 0x40 },
	{  0x31, 0x40 },
	{  0x32, 0xe3 },
	{  0x33, 0xff },
	{  0x34, 0xff },
	{  0x35, 0x73 },
	{  0x38, 0xbf },
	{  0x39, 0xff },
	{  0x3a, 0xff },
	{  0x3b, 0xff },
	{  0x3c, 0xf8 },
	{  0x3d, 0x15 },
	{  0x3e, 0xef },
	{  0x3f, 0x01 },
	{  0x42, 0x08 },
	{  0x49, 0xff },
	{  0x4a, 0xff },
	{  0x4b, 0xff },
	{  0x4c, 0xff },
	{  0x4d, 0xc0 },
	{  0x4e, 0x20 },
	{  0x4f, 0xdf },
	{  0x57, 0x40 },
	{  0x7f, 0x40 },


	{  0xff, 0x1a },
	{  0xbd, 0xc3 },
	{  0x2d, 0x02 },
	{  0x50, 0x08 },
	{  0x5c, 0x0f },
	{  0x5d, 0xff },
	{  0x6c, 0xdd },

	// Update NVM Bank
	{  0xff, 0x0a },
	{  0x0f, 0x10 },
	// Proceed to Loop Lock
	{  0x0f, 0x40 },
	// PLLA : end

	// NVM END HERE

};

/** @Description - Def4 from lft
 * xtal freq = 38.4 MHz 
 * Out freq  = 3.3V  @ 1 MHz OUT7
 *             3.3V  @ 1 PPS OUT0
 * Used PLL = PLLA
 */

static const struct siT9531x_reg_cfg siT95317_lftdef4[] = {
	// Configure IO Supply Level
	{  0xff, 0x00 },
	{  0xbd, 0xc3 },
	{  0x3a, 0x00 },
	{  0x0f, 0x10 },
	//GENERIC : begin
	{  0x57, 0x01 },

	{  0xff, 0x00 },
	{  0xbd, 0xc3 },
	{  0xec, 0x1c },
	{  0x10, 0x04 },
	{  0x11, 0x65 },
	{  0x12, 0x64 },
	{  0x13, 0x63 },
	{  0x14, 0x06 },
	{  0x15, 0x03 },
	{  0x16, 0xa1 },
	{  0x17, 0x05 },
	{  0x18, 0x37 },
	{  0x1a, 0x0f },
	{  0x1b, 0x0f },
	{  0x1c, 0x0f },
	{  0x1d, 0xcf },
	{  0x1e, 0xfb },
	{  0x1f, 0xcf },
	{  0x20, 0xfb },
	{  0x21, 0xbc },
	{  0x22, 0xcf },
	{  0x23, 0x43 },
	{  0x24, 0x08 },
	{  0x25, 0x01 },
	{  0x27, 0x27 },
	{  0x28, 0x40 },
	{  0x29, 0x0d },
	{  0x2a, 0xfd },
	{  0x2f, 0x00 },
	{  0x33, 0x40 },
	{  0x34, 0x6c },
	{  0x35, 0xff },
	{  0x3c, 0xa0 },
	{  0x3f, 0x0e },
	{  0x40, 0x03 },


	{  0xff, 0x01 },
	{  0xbd, 0xc3 },
	{  0x10, 0x01 },
	{  0x11, 0x02 },
	{  0x12, 0x00 },
	{  0x13, 0x62 },
	{  0x14, 0x04 },
	{  0x16, 0x01 },
	{  0x17, 0x11 },
	{  0x18, 0x11 },
	{  0x19, 0x11 },
	{  0x1a, 0x11 },
	{  0x1b, 0x11 },
	{  0x2e, 0x00 },
	{  0x2f, 0x00 },
	{  0x32, 0x00 },
	{  0x33, 0x00 },
	{  0x34, 0x00 },
	{  0x35, 0x00 },
	{  0x36, 0x00 },
	{  0x37, 0x00 },
	{  0x38, 0x00 },
	{  0x3c, 0x00 },
	{  0x42, 0x08 },
	// Update NVM Bank
	{  0xff, 0x00 },
	{  0x0f, 0x10 },
	// force wakeup the slaves
	{  0xe1, 0x0f },
	{  0xe0, 0x0f },
	//Proceed to Loop Lock	
	{  0x0f, 0x40 },
	// GENERIC : end

	// INPUT_SYS : begin
	{  0xff, 0x02 },
	{  0xbd, 0xc3 },
	{  0x10, 0x0a },
	{  0x16, 0xff },
	{  0x17, 0xff },
	{  0x18, 0xff },
	{  0x19, 0xff },
	{  0x1a, 0x28 },
	{  0x1b, 0x21 },
	{  0x20, 0x14 },
	{  0x26, 0xff },
	{  0x27, 0xff },
	{  0x28, 0xff },
	{  0x29, 0xff },
	{  0x2a, 0x28 },
	{  0x2b, 0x21 },
	{  0x3f, 0x0a },
	{  0x4f, 0x01 },

	// update nvm bank         
	{  0x0f, 0x10 },

	// proceed to loop Lock    
	{  0x0f, 0x40 },

	// end         

	// CLOCK_MON : begin
	{  0xff, 0x06 },
	{  0xbd, 0xc3 },
	{  0x10, 0x43 },
	{  0x11, 0x05 },
	{  0x12, 0x04 },
	{  0x14, 0x64 },
	{  0x17, 0xc5 },
	{  0x1a, 0x2a },
	{  0x1b, 0x08 },
	{  0x1d, 0x19 },
	{  0x1f, 0x11 },
	{  0x20, 0x43 },
	{  0x21, 0x05 },
	{  0x22, 0x04 },
	{  0x24, 0x64 },
	{  0x27, 0x05 },
	{  0x2a, 0x2a },
	{  0x2b, 0x08 },
	{  0x2d, 0x19 },
	{  0x2f, 0x11 },
	{  0x37, 0xc0 },
	{  0x47, 0xc0 },
	{  0x70, 0x01 },
	{  0x7c, 0x60 },
	{  0x8b, 0x11 },
	{  0x8f, 0x81 },
	{  0xa7, 0xc0 },
	{  0xc7, 0xc0 },
	{  0xd7, 0xc0 },
	{  0xe7, 0xc0 },


	{  0xff, 0x07 },
	{  0xbd, 0xc3 },
	{  0x27, 0x33 },
	{  0x28, 0x07 },
	{  0x29, 0x1a },
	{  0x2a, 0x0a },
	{  0x2b, 0xaa },
	{  0x2c, 0xaa },
	{  0x2d, 0xaa },
	{  0x2e, 0x18 },

	//update nvm bank         
	{  0xff, 0x06 },
	{  0x0f, 0x10 },

	//proceed to loop Lock    
	{  0x0f, 0x40 },
	// end         

	// OUTSYS : begin
	{  0xff, 0x03 },
	{  0xbd, 0xc3 },
	{  0x10, 0x01 },
	{  0x11, 0x25 },
	{  0x12, 0x22 },
	{  0x13, 0xb9 },
	{  0x14, 0x80 },
	{  0x15, 0x40 },
	{  0x19, 0x02 },
	{  0x1a, 0x57 },
	{  0x1c, 0x30 },
	{  0x1e, 0x68 },
	{  0x2f, 0x03 },


	{  0xff, 0x04 },
	{  0xbd, 0xc3 },
	{  0x2f, 0x63 },
	{  0x63, 0x13 },
	{  0x64, 0x36 },
	{  0x65, 0x40 },
	{  0x69, 0x02 },
	{  0x6a, 0x97 },
	{  0x6c, 0x30 },
	{  0x6e, 0x64 },

	//update nvm bank         
	{  0xff, 0x03 },
	{  0x0f, 0x10 },

	//proceed to loop Lock    
	{  0x0f, 0x40 },

	//PLLA : begin
	{  0xff, 0x0a },
	{  0xbd, 0xc3 },
	{  0x10, 0xb4 },
	{  0x11, 0x64 },
	{  0x12, 0x94 },
	{  0x13, 0x8b },
	{  0x14, 0x27 },
	{  0x15, 0x88 },
	{  0x16, 0x7f },
	{  0x17, 0x02 },
	{  0x18, 0x0f },
	{  0x19, 0x58 },
	{  0x1b, 0x05 },
	{  0x1c, 0x04 },
	{  0x1d, 0x24 },
	{  0x1f, 0xa8 },
	{  0x22, 0x32 },
	{  0x23, 0x10 },
	{  0x25, 0x86 },
	{  0x26, 0x40 },
	{  0x27, 0x08 },
	{  0x28, 0x01 },
	{  0x29, 0x1d },
	{  0x2a, 0x32 },
	{  0x2b, 0x66 },
	{  0x2c, 0x11 },
	{  0x2d, 0x1c },
	{  0x2e, 0x3e },
	{  0x2f, 0x07 },
	{  0x30, 0x40 },
	{  0x31, 0x40 },
	{  0x32, 0x53 },
	{  0x33, 0x55 },
	{  0x34, 0x55 },
	{  0x35, 0x09 },
	{  0x38, 0xbf },
	{  0x39, 0xff },
	{  0x3a, 0xff },
	{  0x3b, 0xff },
	{  0x3c, 0xf8 },
	{  0x3d, 0x15 },
	{  0x3e, 0xec },
	{  0x3f, 0x01 },
	{  0x43, 0xcd },
	{  0x44, 0xcc },
	{  0x45, 0xcc },
	{  0x46, 0xcc },
	{  0x49, 0xff },
	{  0x4a, 0xff },
	{  0x4b, 0xff },
	{  0x4c, 0xff },
	{  0x4d, 0xc0 },
	{  0x4e, 0x20 },
	{  0x4f, 0xdf },
	{  0x57, 0x40 },
	{  0x7f, 0x40 },


	{  0xff, 0x1a },
	{  0xbd, 0xc3 },
	{  0x2d, 0x02 },
	{  0x50, 0x08 },
	{  0x5c, 0x0f },
	{  0x5d, 0xff },
	{  0x6c, 0xdd },

	// update nvm bank
	{  0xff, 0x0a },
	{  0x0f, 0x10 },

	// proceed to loop Lock    
	{  0x0f, 0x40 },
	// PLLA : end

	// NVM END HERE
};

struct ioctl_data {
	unsigned int clk_id;
	unsigned int page;
	unsigned int reg_address;
	unsigned int value;  
};

struct si9531x_clk
{
	bool status;		//enable/disabled
	bool linktype;		//single/diff	
	bool terminationreg;	//enable/disabled
	bool pllA;
	bool pllB;
	bool pllC;
	bool pllD;
	modetype mode;
	differentialType difflinktype;
	unsigned int swingvoltage;
	unsigned int reg;
	unsigned int freq;
	unsigned int accuracy ;
	char * clkName;		
	struct clk_hw hw;
	struct device_node *dn;
	struct drv_si9531x *data;
	struct i2c_client *client;      // I2C client to communicate with the hardware
};

struct si9531x_clk_enable {
	bool status;            // enable/disable
	bool linktype;          // single/diff
	char *clkName;
	unsigned int freq;
	unsigned int accuracy;
};

struct freq_config {
	unsigned int input_frequency;  
	unsigned int output_frequency; 
	int clkid;                     
};

struct drv_si9531x {
	bool    eeprom_override;
	u8 	num_inputs;
	u8 	num_outputs;
	u16 	chip_id;
	u32     majorNum;
	u32     minorNum;
	char *	chip_name;
	dev_t 	ldev_node;
	struct 	clk_hw hw;
	struct 	i2c_client *client;
	struct 	si9531x_clk *xtal_clk;
	struct 	si9531x_clk *input_clk;
	struct 	si9531x_clk *output_clk;
	struct 	cdev *siT_cdev;
	struct 	class *siT_cl;
	struct 	clk **clkin;
	struct 	clk **clkout;
};
